name: Build AutoCollect

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Install playwright browsers
      run: |
        playwright install chromium
        
    - name: Build Windows executable
      run: |
        python build.py
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: dist/

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Install playwright browsers
      run: |
        playwright install chromium
        
    - name: Build macOS executable
      run: |
        python build.py
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-build
        path: dist/

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-build
        path: windows-build/
        
    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: macos-build
        path: macos-build/
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: AutoCollect v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Zip Windows build
      run: |
        cd windows-build
        zip -r ../AutoCollect-Windows.zip .
        
    - name: Zip macOS build
      run: |
        cd macos-build
        zip -r ../AutoCollect-macOS.zip .
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AutoCollect-Windows.zip
        asset_name: AutoCollect-Windows.zip
        asset_content_type: application/zip
        
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AutoCollect-macOS.zip
        asset_name: AutoCollect-macOS.zip
        asset_content_type: application/zip