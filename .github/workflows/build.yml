name: Build AutoCollect Cross-Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create storage_state.json
      run: |
        if not exist auto_collect mkdir auto_collect
        echo {} > auto_collect\storage_state.json
      shell: cmd
        
    - name: Build Windows executable
      run: |
        python build.py
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: AutoCollect-Windows-${{ github.sha }}
        path: dist/AutoCollect/
        retention-days: 30
        
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create storage_state.json
      run: |
        mkdir -p auto_collect
        echo '{}' > auto_collect/storage_state.json
        
    - name: Build macOS executable
      run: |
        python build.py
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: AutoCollect-macOS-${{ github.sha }}
        path: |
          dist/AutoCollect/
          dist/AutoCollect.app/
        retention-days: 30

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: AutoCollect-Windows-${{ github.sha }}
        path: release/Windows/AutoCollect/
        
    - name: Download macOS artifact  
      uses: actions/download-artifact@v4
      with:
        name: AutoCollect-macOS-${{ github.sha }}
        path: release/macOS/
        
    - name: Create release package
      run: |
        cd release
        
        # 创建说明文件
        cat > README.md << 'EOF'
        # AutoCollect v1.0.0 - 跨平台发布包
        
        ## 运行方法
        
        ### Windows
        1. 解压到任意位置
        2. 双击 `Windows/AutoCollect/AutoCollect.exe`
        
        ### macOS
        1. 解压到任意位置  
        2. 双击 `macOS/AutoCollect.app` 或运行 `macOS/AutoCollect/AutoCollect`
        
        ## 系统要求
        - Windows 10 或更高版本
        - macOS 10.14 或更高版本
        
        ## 功能特性
        - ✅ X/Twitter 数据抓取
        - ✅ Telegram 链接提取
        - ✅ 数据库管理界面
        - ✅ 跨平台支持
        
        构建时间: $(date)
        Git SHA: ${{ github.sha }}
        EOF
        
        # 打包发布
        zip -r AutoCollect-CrossPlatform-${{ github.sha }}.zip .
        
    - name: Upload release package
      uses: actions/upload-artifact@v4
      with:
        name: AutoCollect-Release-${{ github.sha }}
        path: release/AutoCollect-CrossPlatform-${{ github.sha }}.zip
        retention-days: 90